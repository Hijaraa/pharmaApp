name: Pharmacy App CI/CD

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: ./mvnw clean package -DskipTests

    - name: Run tests
      run: ./mvnw test

    - name: Generate test reports
      run: ./mvnw surefire-report:report

    - name: Generate code coverage reports
      run: ./mvnw jacoco:report

    - name: Upload test reports
      uses: actions/upload-artifact@v3
      with:
        name: test-reports
        path: target/site/

    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: pharmacy-app
        path: target/Pharmacy-0.0.1-SNAPSHOT.jar

  code-quality:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v3

    - name: Run Qodana Scan
      uses: JetBrains/qodana-action@v2023.2
      with:
        args: --results-dir=${{ github.workspace }}/qodana-results

    - name: Upload Qodana results
      uses: actions/upload-artifact@v3
      with:
        name: qodana-results
        path: ${{ github.workspace }}/qodana-results

  docker:
    runs-on: ubuntu-latest
    needs: [build, code-quality]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/pharmacy-app:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/pharmacy-app:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/pharmacy-app:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/pharmacy-app:buildcache,mode=max

  # Uncomment this job when you have a deployment environment
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: docker
  #   if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
  #   
  #   steps:
  #   - name: Deploy to production
  #     run: |
  #       echo "Deploying to production server"
  #       # Add deployment commands here
